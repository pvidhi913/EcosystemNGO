/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.HealthOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EducationVolunteerWorkRequest;
import Business.WorkQueue.HealthDoctorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vidhi
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization doctorOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization,Network network, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.doctorOrganization = (DoctorOrganization)organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network=network;
        valueLabel.setText(enterprise.getName());
        populateAssignedTable();
        populateTable(); 
    }
    
    public void populateAssignedTable() {
        
        DefaultTableModel model = (DefaultTableModel)assignedRequestJTable.getModel();
        model.setRowCount(0);   
        SimpleDateFormat formatter = new SimpleDateFormat("dd MMM, yyyy");
        
        for (Iterator<WorkRequest> it = userAccount.getWorkQueue().getWorkRequestList().iterator(); it.hasNext();) {
            HealthDoctorWorkRequest request = (HealthDoctorWorkRequest) it.next();
            Object[] row = new Object[8];
            row[0] = request;
            row[1]=request.getTotalPatients();
            row[2]=request.getCaseType();
            row[3]=request.getPatientType();
            row[4]=request.getSender();
            Date date = request.getDate();
            if(date==null){ 
                row[5]=date;
            } else {
                String docDate = formatter.format(date);
                row[5]=docDate;
            }
            row[6]=request.getTime();
            row[7]=request.getStatus();
            model.addRow(row);
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel)newRequestJTable.getModel();
        model.setRowCount(0);    
        SimpleDateFormat formatter = new SimpleDateFormat("dd MMM, yyyy");
        
        for (Iterator<WorkRequest> it = doctorOrganization.getWorkQueue().getWorkRequestList().iterator(); it.hasNext();) {
            HealthDoctorWorkRequest request = (HealthDoctorWorkRequest) it.next();
            if(request.getStatus().equalsIgnoreCase("sent"))
            {
                Object[] row = new Object[5];
                row[0] = request;
                row[1]=request.getTotalPatients();
                row[2]=request.getCaseType();
                row[3]=request.getPatientType();
                row[4]=request.getSender();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        homePageJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignedRequestJTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();
        btnMessage = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        btnDisassociate = new javax.swing.JButton();
        newCasesJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        newRequestJTable = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        refreshBtn1 = new javax.swing.JButton();
        btnMessage1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMessage1 = new javax.swing.JTextArea();
        jLabel25 = new javax.swing.JLabel();

        jTabbedPane1.setBackground(new java.awt.Color(180, 195, 195));
        jTabbedPane1.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N

        homePageJPanel.setBackground(new java.awt.Color(180, 195, 195));

        assignedRequestJTable.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        assignedRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Type", "Total Patients", "Case", "Patient Type", "Sender", "Date", "Time", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(assignedRequestJTable);

        refreshBtn.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        processBtn.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        processBtn.setText("Process");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });

        btnMessage.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnMessage.setText("View Message");
        btnMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMessageActionPerformed(evt);
            }
        });

        txtMessage.setColumns(20);
        txtMessage.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtMessage.setRows(5);
        jScrollPane3.setViewportView(txtMessage);

        jLabel11.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Doctor Work Area");

        enterpriseLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 16)); // NOI18N
        enterpriseLabel.setText("EnterPrise -");

        valueLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 16)); // NOI18N
        valueLabel.setText("<value>");

        btnDisassociate.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnDisassociate.setText("Disassociate");
        btnDisassociate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisassociateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePageJPanelLayout = new javax.swing.GroupLayout(homePageJPanel);
        homePageJPanel.setLayout(homePageJPanelLayout);
        homePageJPanelLayout.setHorizontalGroup(
            homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
            .addGroup(homePageJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enterpriseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePageJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(refreshBtn)
                    .addGroup(homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, homePageJPanelLayout.createSequentialGroup()
                                .addComponent(btnMessage)
                                .addGap(18, 18, 18)
                                .addComponent(btnDisassociate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(processBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePageJPanelLayout.setVerticalGroup(
            homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageJPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addGap(15, 15, 15)
                .addGroup(homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(refreshBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(homePageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisassociate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(461, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Home Page", homePageJPanel);

        newCasesJPanel.setBackground(new java.awt.Color(180, 195, 195));

        newRequestJTable.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        newRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Doctor Type", "Total Patients", "Case", "Patient Type", "Sender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(newRequestJTable);

        assignBtn.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        refreshBtn1.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        refreshBtn1.setText("Refresh");
        refreshBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtn1ActionPerformed(evt);
            }
        });

        btnMessage1.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnMessage1.setText("View Message");
        btnMessage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMessage1ActionPerformed(evt);
            }
        });

        txtMessage1.setColumns(20);
        txtMessage1.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtMessage1.setRows(5);
        jScrollPane4.setViewportView(txtMessage1);

        jLabel25.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("New Doctor Cases");

        javax.swing.GroupLayout newCasesJPanelLayout = new javax.swing.GroupLayout(newCasesJPanel);
        newCasesJPanel.setLayout(newCasesJPanelLayout);
        newCasesJPanelLayout.setHorizontalGroup(
            newCasesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newCasesJPanelLayout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .addGroup(newCasesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newCasesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(newCasesJPanelLayout.createSequentialGroup()
                            .addComponent(btnMessage1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(assignBtn))
                        .addGroup(newCasesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refreshBtn1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        newCasesJPanelLayout.setVerticalGroup(
            newCasesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newCasesJPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel25)
                .addGap(30, 30, 30)
                .addComponent(refreshBtn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(newCasesJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMessage1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(499, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("New Cases", newCasesJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        populateAssignedTable();
        txtMessage.setText("");
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed

        int selectedRow = assignedRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            return;
        }

        HealthDoctorWorkRequest request = (HealthDoctorWorkRequest)assignedRequestJTable.getValueAt(selectedRow, 0);
        if(!request.getStatus().equalsIgnoreCase("Completed")){
            request.setStatus("Processing");
        } else {
            JOptionPane.showMessageDialog(null, "Completed request can't be processed.");
            return;
        }
        
        ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer,userAccount, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_processBtnActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = newRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            return;
        }

        HealthDoctorWorkRequest request = (HealthDoctorWorkRequest)newRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Accepted");
        userAccount.getWorkQueue().getWorkRequestList().add(request);
        JOptionPane.showMessageDialog(null, "Doctor Request Assigned Successfully!");
        populateAssignedTable();
        populateTable();

    }//GEN-LAST:event_assignBtnActionPerformed

    private void refreshBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtn1ActionPerformed
        // TODO add your handling code here:
        populateTable(); 
        txtMessage1.setText("");
    }//GEN-LAST:event_refreshBtn1ActionPerformed

    private void btnMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMessageActionPerformed
        // TODO add your handling code here:
       
        int selectedRow = assignedRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            return;
        }
        HealthDoctorWorkRequest request = (HealthDoctorWorkRequest)assignedRequestJTable.getValueAt(selectedRow, 0);
        txtMessage.setText(request.getMessage());
        txtMessage.setEditable(false);   

    }//GEN-LAST:event_btnMessageActionPerformed

    private void btnMessage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMessage1ActionPerformed
        // TODO add your handling code here:
       int selectedRow = newRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            return;
        }
        HealthDoctorWorkRequest request = (HealthDoctorWorkRequest)newRequestJTable.getValueAt(selectedRow, 0);
        txtMessage1.setText(request.getMessage());
        txtMessage1.setEditable(false); 
    }//GEN-LAST:event_btnMessage1ActionPerformed

    private void btnDisassociateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisassociateActionPerformed
        // TODO add your handling code here:
        int selectedRow = assignedRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
            return;
        }
        
        HealthDoctorWorkRequest request = (HealthDoctorWorkRequest)assignedRequestJTable.getValueAt(selectedRow, 0);
        
        if(request.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null, "Can't dissociate request in completed status.");
            return;
        } else {
            request.setReceiver(null);
            request.setStatus("Sent");
            userAccount.getWorkQueue().getWorkRequestList().remove(request);
        }
        
        populateAssignedTable();
        populateTable();
        
    }//GEN-LAST:event_btnDisassociateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JTable assignedRequestJTable;
    private javax.swing.JButton btnDisassociate;
    private javax.swing.JButton btnMessage;
    private javax.swing.JButton btnMessage1;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JPanel homePageJPanel;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel newCasesJPanel;
    private javax.swing.JTable newRequestJTable;
    private javax.swing.JButton processBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton refreshBtn1;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextArea txtMessage1;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

   
}
